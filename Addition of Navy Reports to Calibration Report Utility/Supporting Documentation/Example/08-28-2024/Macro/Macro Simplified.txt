Sub Run_Report()
    Dim wsSource As Worksheet
    Dim wsSearch As Worksheet
    Dim wsTemplate As Worksheet
    Dim wsInstrument As Worksheet
    Dim searchRange As Range
    Dim cell As Range
    Dim searchString As Variant
    Dim targetValueR As Variant
    Dim targetValueG As Variant
    Dim foundRow As Long
    Dim rowOffset As Integer
    Dim searchValue As String
    Dim parsedValue As String
    Dim instrumentCell As Range
    Dim calReportCell As Range
    Dim calReportValueD As Variant
    Dim startPos As Integer
    Dim endPos As Integer
    Dim i As Integer
    Dim currentCellValue As String

    ' Set the source, search, template, and instrument worksheets
    Set wsSource = ThisWorkbook.Sheets("Report WorkSheet")
    Set wsSearch = ThisWorkbook.Sheets("CalReport")
    Set wsTemplate = ThisWorkbook.Sheets("Report Template")
    Set wsInstrument = ThisWorkbook.Sheets("Instrument Map")
    
    ' Define the search range as a continuous range from D10 to D63
    Set searchRange = wsSource.Range("D10:D63")
    
    ' Process the search range
    For Each cell In searchRange
        searchString = cell.value
        If Len(searchString) > 0 Then
            foundRow = 0
            For Each searchCell In wsSearch.Range("D:D")
                If InStr(1, searchCell.value, searchString, vbTextCompare) > 0 Then
                    foundRow = searchCell.Row
                    targetValueR = wsSearch.Cells(foundRow, "R").value
                    targetValueG = wsSearch.Cells(foundRow, "G").value
                    Exit For
                End If
            Next searchCell
            If foundRow > 0 Then
                cell.Offset(0, -2).value = targetValueR ' Paste in column B (2 columns left from column D)
                cell.Offset(0, 1).value = targetValueG ' Paste in column E (1 column right from column D)
            Else
                cell.Offset(0, -2).value = "Not Found"
                cell.Offset(0, 1).value = "Not Found"
            End If
        End If
    Next cell

    ' Additional Functionality:
    rowOffset = 64 ' Starting row for multiple search values

    Do
        ' Retrieve the value from the current row in column C of "Report WorkSheet"
        currentCellValue = CStr(wsSource.Cells(rowOffset, "C").value)
        
        ' Check if the current cell is empty
        If Len(currentCellValue) = 0 Then
            Exit Do
        End If
        
        ' Search for this value in column H of "Instrument Map"
        Set instrumentCell = wsInstrument.Columns("H").Find(What:=currentCellValue, LookIn:=xlValues, LookAt:=xlPart)
        
        If Not instrumentCell Is Nothing Then
            ' Parse the value between "XT-" and ")"
            startPos = InStr(instrumentCell.value, "XT-")
            If startPos > 0 Then
                startPos = startPos + 3 ' Move past "XT-"
                endPos = InStr(startPos, instrumentCell.value, ")")
                If endPos > startPos Then
                    parsedValue = Mid(instrumentCell.value, startPos, endPos - startPos)
                    
                    ' Search for this parsed value in column C of "CalReport"
                    Set calReportCell = wsSearch.Columns("C").Find(What:=parsedValue, LookIn:=xlValues, LookAt:=xlPart)
                    
                    If Not calReportCell Is Nothing Then
                        ' Paste the entire found cell into D and E of the current row in "Report WorkSheet"
                        wsSource.Cells(rowOffset, "D").value = calReportCell.value
                        wsSource.Cells(rowOffset, "E").value = calReportCell.value
                        ' Also copy the value from column D on the same row into B of the current row
                        calReportValueD = wsSearch.Cells(calReportCell.Row, "D").value
                        wsSource.Cells(rowOffset, "B").value = calReportValueD
                    Else
                        ' If not found, clear the target cells
                        wsSource.Cells(rowOffset, "D").value = "Not Found"
                        wsSource.Cells(rowOffset, "E").value = "Not Found"
                        wsSource.Cells(rowOffset, "B").value = "Not Found"
                    End If
                Else
                    ' If parsing failed, clear the target cells
                    wsSource.Cells(rowOffset, "D").value = "Parsing Error"
                    wsSource.Cells(rowOffset, "E").value = "Parsing Error"
                    wsSource.Cells(rowOffset, "B").value = "Parsing Error"
                End If
            Else
                ' If "XT-" not found, clear the target cells
                wsSource.Cells(rowOffset, "D").value = "Not Found"
                wsSource.Cells(rowOffset, "E").value = "Not Found"
                wsSource.Cells(rowOffset, "B").value = "Not Found"
            End If
        Else
            ' If not found in "Instrument Map", clear the target cells
            wsSource.Cells(rowOffset, "D").value = "Not Found"
            wsSource.Cells(rowOffset, "E").value = "Not Found"
            wsSource.Cells(rowOffset, "B").value = "Not Found"
        End If
        
        ' Move to the next row
        rowOffset = rowOffset + 1
    Loop Until IsEmpty(wsSource.Cells(rowOffset, "C").value)
    
    ' Make the "Report Template" sheet active and select cell A1
    wsTemplate.Activate
    wsTemplate.Range("A1").Select
    MsgBox "Report Successfully Compiled", vbInformation
End Sub
